# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Benchmarks

on:
  workflow_call: # This is called from CreateRelease.yml

permissions:
  id-token: write
  contents: read

jobs:
  # this job requires the build-guest-binaries job be complete prior to
  # its execution. this dependency should be expressed in the dependent
  # workflow
  benchmark:
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        hypervisor: [hyperv, 'hyperv-ws2025', mshv, mshv3, kvm] # hyperv,hyperv-ws2025 are windows, mshv, mshv3 and kvm are linux
        cpu: [amd, intel]
        config: [release]
    runs-on: ${{ fromJson(
      format('["self-hosted", "{0}", "X64", "1ES.Pool=hld-{1}-{2}"]', 
      (matrix.hypervisor == 'hyperv' || matrix.hypervisor == 'hyperv-ws2025') && 'Windows' || 'Linux', 
      matrix.hypervisor == 'hyperv' && 'win2022' || matrix.hypervisor == 'hyperv-ws2025' && 'win2025' || matrix.hypervisor == 'mshv3' && 'azlinux3-mshv' || matrix.hypervisor, 
      matrix.cpu)) }} 
    steps:
      ### Setup ###

      - uses: actions/checkout@v5

      - uses: hyperlight-dev/ci-setup-workflow@v1.8.0
        with:
          rust-toolchain: "1.89"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Rust Guest Binaries
        uses: actions/download-artifact@v6
        with:
          name: rust-guest-binaries-release
          path: ./downloaded-rust-guest-binaries-release

      - name: Download C Guest Binaries
        uses: actions/download-artifact@v6
        with:
          name: c-guest-binaries-release
          path: ./downloaded-c-guest-binaries-release

      - name: Copy Guest Binaries
        run: |
          cp ./downloaded-rust-guest-binaries-release/simpleguest ./src/tests/rust_guests/bin/release/simpleguest
          cp ./downloaded-rust-guest-binaries-release/dummyguest ./src/tests/rust_guests/bin/release/dummyguest
          cp ./downloaded-c-guest-binaries-release/simpleguest ./src/tests/c_guests/bin/release/simpleguest

      ### Benchmarks ###
      - name: Fetch tags
        run: git fetch --tags origin

      - name: Download benchmarks from most recent release
        run: just bench-download ${{ runner.os }} ${{ matrix.hypervisor }} ${{ matrix.cpu }} # skip tag parameter to compare to latest stable release
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Benchmarks
        run: just bench-ci main ${{ matrix.hypervisor == 'mshv' && 'mshv2' || ''}}

      - uses: actions/upload-artifact@v4
        with:
          name: benchmarks_${{runner.os}}_${{matrix.hypervisor}}_${{ matrix.cpu }}
          path: ./target/criterion/
          if-no-files-found: error
